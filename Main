from flask import Flask, request, render_template, jsonify, send_file
from werkzeug.utils import secure_filename
import os
import io

app = Flask(__name__)

UPLOAD_FOLDER = 'uploads'
ALLOWED_EXTENSIONS = {'csv', 'zip'}

app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route('/', methods=['GET', 'POST'])
def upload_and_process():
    if request.method == 'POST':
        if 'file' not in request.files:
            return jsonify({"message": "No file part", "status": "error"}), 400
        
        file = request.files['file']
        
        if file.filename == '':
            return jsonify({"message": "No file selected", "status": "error"}), 400
        
        if file and allowed_file(file.filename):
            filename = secure_filename(file.filename)
            file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            file.save(file_path)
            
            # Here you would typically process the file
            # For this example, we'll just read it and send it back
            
            with open(file_path, 'rb') as f:
                file_content = f.read()
            
            mem_file = io.BytesIO(file_content)
            
            return jsonify({
                "message": "File upload successful",
                "status": "success",
                "file": file_content.decode('utf-8')  # Assuming it's a text file
            }), 200
        else:
            return jsonify({"message": "Only upload zip/csv file", "status": "error"}), 400
    
    return render_template('upload.html')

if __name__ == '__main__':
    app.run(debug=True)
